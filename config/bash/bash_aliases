# DNF
alias dnfi='sudo dnf install'
alias dnfu='sudo dnf update'
alias dnfr='sudo dnf remove'
alias dnfs='sudo dnf search'
alias dnfl='sudo dnf list'
alias dnfcu='sudo dnf check-update'
alias dnfca='sudo dnf clean all'
alias dnfar='sudo dnf autoremove'

# Versioning
alias py2='python'
alias py='python3'
alias py3='python3'
alias gpg='gpg2'
alias more='less'
alias diff='colordiff'

# Vim
if command -v nvim >/dev/null 2>&1; then
	alias vi='nvim'
	alias vim='nvim'
	alias view='nvim -R'
else
	alias vi='vim'
	alias view='vim -R'
fi

# Other
alias cl='clear'
alias ls='ls --color=auto'
alias la='ls -Al'
alias rm='rm -i'
alias mv='mv -i'
alias sudo='sudo '
alias perltidy='perltidy -l=0 -pt=2 -sbt=2 -bt=2 -blbs=2 -lbl=1 -bbb -mbl=2 -kbl=0 -et=4 -ce'
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'

# Flatpaks
if [[ -e '/var/lib/flatpak/exports/bin/com.visualstudio.code' ]]; then
	alias code='/var/lib/flatpak/exports/bin/com.visualstudio.code'
fi

# VPN
alias aws_vpn='sudo openvpn --config ~/Dropbox/Traveltek/aws_client.ovpn'

# Mount
alias mount_branches='~/scripts/rmnt.sh branches-1.eu1.dev.aws.traveltek.net /home/dstewart ~/branches'
alias unmount='~/scripts/runmnt.sh'

alias mountsrvr='~/scripts/rmnt.sh danstewart.dev / ~/srvr'

function ntt_mount() {
	server=$1
	~/scripts/rmnt.sh $server.traveltek.net /home/dstewart ~/$server
}

# cd
alias ..='cd ..'
alias ...='..;..'
alias ....='..;..;..'
alias .....='..;..;..;..'

#SSH
alias ssh='ssh -XY'

# Functions
function hlgrep() {
	# grep but it prints the entire input content and highlights the matches
	grep --color -E "$1|\$" $2
}

# Git wrapper for work repos
function ttekgit() {
	ACTION=$1 && shift
	ARGS="$@"

	if [[ $ACTION != 'clone' ]]; then
		git config user.name 'Dan Stewart' >/dev/null 2>&1
		git config user.email 'daniel@traveltek.net' >/dev/null 2>&1
	fi

	if [[ "$ARGS" ]]; then
		GIT_SSH_COMMAND='ssh -i $HOME/.ssh/id_rsa_traveltek' git $ACTION $ARGS
	else
		GIT_SSH_COMMAND='ssh -i $HOME/.ssh/id_rsa_traveltek' git $ACTION
	fi
}

# Git wrapper for personal repos
function mygit() {
	ACTION=$1 && shift
	ARGS="$@"

	if [[ $ACTION != 'clone' ]]; then
		git config user.name 'Dan Stewart' >/dev/null 2>&1
		git config user.email 'danielandrewstewart@gmail.com' >/dev/null 2>&1
	fi
	
	if [[ "$ARGS" ]]; then
		GIT_SSH_COMMAND='ssh -i $HOME/.ssh/id_rsa_personal' git $ACTION $ARGS
	else
		GIT_SSH_COMMAND='ssh -i $HOME/.ssh/id_rsa_personal' git $ACTION
	fi
}


function perl_check() {
	while read status filename; do
		if [[ $filename == *.pm || $filename == *.pl ]]; then
			echo "==> $filename"
			perl -I local/lib/perl5/ -I modules/ -c $filename
			echo
		fi
	done < <(git status --porcelain | egrep -v "^ ?D ")
}

function tail_logs() {
	[[ -z $BRANCH ]] && BRANCH=$1

	tail -n 0 -f .apache/$BRANCH/logs/error.log | grep -v --line-buffered uninitialized | grep -v --line-buffered 'has gone away' | grep -v --line-buffered 'Prototype mismatch' | egrep -v --line-buffered '^ at' | grep --line-buffered -v 'Use of uninitialized' | grep --line-buffered -v 'Constant subroutine redefined' | grep --line-buffered -v 'Prototype mismatch'
}
